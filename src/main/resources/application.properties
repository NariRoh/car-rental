# instantiate db connection

spring.datasource.url=jdbc:postgresql://localhost:5432/car_rental
spring.datasource.username=postgres
spring.datasource.password=postgres

# use heroku db
#spring.datasource.url=${DB_URL}
#spring.datasource.username=${DB_USER_NAME}
#spring.datasource.password=${DB_PASSWORD}


spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Hibernate SQL dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

server.error.include-message=always
server.error.include-binding-errors=always

# stripe api key
#stripe.apikey=${STRIPE_SECRET_KEY}

#Don't cache thymeleaf files - FOR TEST PURPOSE ONLY
spring.thymeleaf.cache=false

# Gson HTTP Message Converter
#spring.mvc.converters.preferred-json-mapper=gson

# Email
spring.mail.default-encoding=UTF-8
spring.mail.host=smtp.gmail.com
spring.mail.username=RealEstateProjectNFC@gmail.com
spring.mail.password=mbxilbkcrrcfslgj
spring.mail.port=587
spring.mail.protocol=smtp
spring.mail.test-connection=false
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true